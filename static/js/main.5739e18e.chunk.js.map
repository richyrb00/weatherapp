{"version":3,"sources":["components/LocationSearchResults.js","Home.js","WeatherByLocation.js","components/LocationSearch.js","App.js","serviceWorker.js","index.js"],"names":["LocationSearchResults","showLocationCard","location","className","name","sys","country","coord","lat","lon","weather","icon","src","process","alt","description","Math","round","main","temp","href","data-public","this","props","data","length","console","log","map","index","key","Component","Home","locationResults","WeatherByLocation","state","weatherData","location_name","match","params","fetch","then","res","json","setState","catch","ariaLabel","LocationSearch","onSubmit","handleSearch","id","onChange","handleSearchChange","type","placeholder","spellCheck","role","aria-expanded","aria-label","aria-owns","dir","xmlns","viewBox","d","App","location_input","e","target","value","preventDefault","param","location_results","list","bind","basename","exact","path","render","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5739e18e.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\n\nexport default class LocationSearchResults extends Component {\n  showLocationCard = (location) => {\n    if (location) {\n      return (\n        <div className=\"card flex flex-row content-center justify-center p-2 bg-white rounded-lg shadow-2xl m-6 items-center\">\n          <div className=\"prod-title flex-grow text-left mx-6\">\n            <p className=\"text-2xl uppercase text-gray-900 font-bold align-middle\">\n              {location.name}, {location.sys.country}\n            </p>\n          </div>\n          <div className=\"prod-geo flex-grow text-right\">\n            <p className=\"uppercase text-sm text-gray-400 align-middle\">\n              [{location.coord.lat},{location.coord.lon}]\n            </p>\n          </div>\n          <div className=\"prod-img text-right w-24\">\n            {location.weather[0].icon ? (\n              <img\n                src={`${process.env.PUBLIC_URL}/images/${location.weather[0].icon}.png`}\n                alt={location.weather[0].description}\n                className=\"w-2/4 mx-auto align-middle\"\n              />\n            ) : null}\n          </div>\n          <div className=\"prod-info text-right mx-6\">\n            <p className=\"font-bold text-xl align-middle\">\n              {Math.round(10 * (location.main.temp - 273.15)) / 10}&#8451;\n            </p>\n          </div>\n          <div className=\"prod-cta text-right mx-6\">\n            <a\n              href={`${process.env.PUBLIC_URL}/location/${location.coord.lat}/${location.coord.lon}`}\n              className=\"px-6 py-2 transition ease-in duration-200 uppercase rounded-full hover:bg-gray-800 hover:text-white border-2 border-gray-900 focus:outline-none align-middle\"\n              data-public={process.env.PUBLIC_URL}\n            >\n              View\n            </a>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    if (this.props.data.length) {\n      console.log(\"data on results\", this.props.data);\n      return (\n        <Fragment>\n          <div>\n            <div className=\"container mx-auto\">\n              <h2 className=\"text-2xl mb-6\">\n                Results: {this.props.data.length}\n              </h2>\n              <ul className=\"flex flex-col mb-4\">\n                {this.props.data.map((location, index) => (\n                  <li className=\"w-full\" key={index}>\n                    {this.showLocationCard(location)}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </Fragment>\n      );\n    }\n    return null;\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport LocationSearchResults from \"./components/LocationSearchResults\";\n\nexport default class Home extends Component {\n  render() {\n    console.log(\"home props\", this.props.locationResults);\n\n    return (\n      <Fragment>\n        <LocationSearchResults data={this.props.locationResults} />\n        <div className=\"container mx-auto\">\n          <div>Homepage</div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LocationSearchResults from \"./components/LocationSearchResults\";\n\nexport default class WeatherByLocation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      weatherData: [],\n      location_name: \"\",\n    };\n  }\n  componentWillMount() {\n    const { lat, lon } = this.props.match.params;\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_WEATHERAPI}`\n    )\n      .then((res) => res.json())\n      .then((location) => {\n        console.log(\"data location\", location);\n        this.setState({ location_name: location.name });\n      })\n      .catch(console.log);\n\n    fetch(\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_WEATHERAPI}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ weatherData: data });\n      })\n      .catch(console.log);\n  }\n\n  render() {\n    console.log(\"weatherData\", this.state.weatherData);\n    console.log(\"location\", this.state.location_name);\n    return (\n      <Fragment>\n        <LocationSearchResults data={this.props.locationResults} />\n        {this.props.locationResults == 0 ? (\n          <div className=\"container mx-auto\">\n            <div className=\"flex\">\n              <div className=\"w-2/6 px-6\">\n                <div className=\"bg-gray-200 p-6 rounded-md\">\n                  <h1 ariaLabel={`Weather in ${this.state.location_name}`}>\n                    {this.state.location_name}\n                  </h1>\n                </div>\n              </div>\n              <div className=\"w-4/6 px-6\">\n                <div className=\"p-6\">\n                  <span>Main</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class LocationSearch extends Component {\n  render() {\n    return (\n      <div className=\"flex bg-white border-b border-gray-200 fixed top-0 inset-x-0 z-100 h-16 items-center\">\n        <div className=\"container relative mx-auto px-6\">\n          <div className=\"w-full lg:px-6 xl:w-3/4 xl:px-12 mx-auto\">\n            <div className=\"relative\">\n              <form onSubmit={this.props.handleSearch}>\n                <span className=\"algolia-autocomplete\">\n                  <input\n                    id=\"locationsearch\"\n                    className=\"transition-colors duration-100 ease-in-out focus:outline-0 border border-transparent focus:bg-white focus:border-gray-300 placeholder-gray-600 rounded-lg bg-gray-200 py-2 pr-4 pl-10 block w-full appearance-none leading-normal ds-input\"\n                    onChange={this.props.handleSearchChange}\n                    type=\"text\"\n                    placeholder=\"Search Location\"\n                    spellCheck=\"false\"\n                    role=\"search\"\n                    aria-expanded=\"false\"\n                    aria-label=\"search input\"\n                    aria-owns=\"algolia-autocomplete-listbox-0\"\n                    dir=\"auto\"\n                  />\n                </span>\n                <div className=\"pointer-events-none absolute inset-y-0 left-0 pl-4 flex items-center\">\n                  <svg\n                    className=\"fill-current pointer-events-none text-gray-600 w-4 h-4\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path d=\"M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z\"></path>\n                  </svg>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment, useState } from \"react\";\nimport \"./App.css\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from \"moment\";\nimport \"moment-timezone\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport WeatherByLocation from \"./WeatherByLocation\";\nimport LocationSearch from \"./components/LocationSearch\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      weather: [],\n      location_results: [],\n      location_input: \"\",\n    };\n  }\n\n  location_input = (e) => {\n    return this.state.location_input;\n  };\n\n  handleSearchChange = (e) => {\n    this.setState({ location_input: e.target.value });\n  };\n\n  handleSearch = (e) => {\n    e.preventDefault();\n    let param = this.state.location_input;\n\n    fetch(\n      `https://api.openweathermap.org/data/2.5/find?q=${param}&type=like&sort=population&cnt=30&appid=${process.env.REACT_APP_WEATHERAPI}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ location_results: data.list });\n      })\n      .catch(console.log);\n  };\n\n  render() {\n    const { location_results } = this.state;\n    console.log(\"app lr\", location_results);\n    let environment;\n\n    if (process.env.REACT_APP_NODE_ENV == \"production\") {\n      environment = \"weatherapp\";\n    } else {\n      environment = \"\";\n    }\n\n    return (\n      <div>\n        <LocationSearch\n          handleSearchChange={this.handleSearchChange.bind(this)}\n          handleSearch={this.handleSearch.bind(this)}\n          location_input={this.location_input.bind(this)}\n        />\n        <div className=\"mt-24\">\n          <Router basename=\"/\">\n            <Route\n              exact\n              path={`/weatherapp/`}\n              render={(props) => (\n                <Home {...props} locationResults={location_results} />\n              )}\n            />\n            <Route\n              path={`/weatherapp/location/:lat/:lon`}\n              render={(props) => (\n                <WeatherByLocation\n                  {...props}\n                  locationResults={location_results}\n                />\n              )}\n            />\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./tailwind.generated.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}